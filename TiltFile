if k8s_context() != "k3d-observability":
  fail("Expected context to be k3d-observability")

k8s_yaml(
  [
    kustomize("./cluster-infra/cert-manager"),
    kustomize("./cluster-infra/jaeger-operator"),
    kustomize("./cluster-infra/otel-operator"),
    kustomize("./apps/default")
  ],
  allow_duplicates = True
)

v1alpha1.kubernetes_apply(
  "gateway",
  yaml="kubectl apply -k ./collectors/gateway/"
)

k8s_kind("Jaeger")
k8s_kind("OpenTelemetryCollector")
k8s_kind("mutatingwebhookconfiguration")
k8s_kind("validatingwebhookconfiguration")

k8s_resource(
  workload="cert-manager",
  labels=[
    "cert-manager"
  ]
)
k8s_resource(
  workload="cert-manager-cainjector",
  labels=[
    "cert-manager"
  ]
)
k8s_resource(
  workload="cert-manager-webhook:deployment",
  labels=[
    "cert-manager"
  ]
)
k8s_resource(
  workload="cert-manager-webhook:mutatingwebhookconfiguration",
  pod_readiness="ignore",
  resource_deps=[
    "cert-manager-webhook:deployment"
  ],
  labels=[
    "cert-manager"
  ]
)
k8s_resource(
  workload="cert-manager-webhook:validatingwebhookconfiguration",
  pod_readiness="ignore",
  resource_deps=[
    "cert-manager-webhook:deployment"
  ],
  labels=[
    "cert-manager"
  ]
)
k8s_resource(
  workload="jaeger-operator",
  resource_deps=[
    "cert-manager",
    "cert-manager-cainjector",
    "cert-manager-webhook:deployment"
  ],
  labels=[
    "jaeger-operator"
  ]
)
k8s_resource(
  workload="jaeger-operator-mutating-webhook-configuration",
  pod_readiness="ignore",
  resource_deps=[
    "cert-manager-webhook:deployment"
  ],
  labels=[
    "jaeger-operator"
  ]
)
k8s_resource(
  workload="jaeger-operator-validating-webhook-configuration",
  pod_readiness="ignore",
  resource_deps=[
    "cert-manager-webhook:deployment"
  ],
  labels=[
    "jaeger-operator"
  ]
)
k8s_resource(
  workload="jaeger-all-in-one",
  port_forwards=16686, 
  resource_deps=[
    "jaeger-operator"
  ],
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="opentelemetry-operator-controller-manager",
  resource_deps=[
    "cert-manager",
    "cert-manager-cainjector",
    "cert-manager-webhook:deployment",
  ],
  labels=[
    "otel-operator"
  ]
)
k8s_resource(
  workload="opentelemetry-operator-mutating-webhook-configuration",
  pod_readiness="ignore",
  resource_deps=[
    "cert-manager-webhook:deployment",
  ],
  labels=[
    "otel-operator"
  ]
)
k8s_resource(
  workload="opentelemetry-operator-validating-webhook-configuration",
  pod_readiness="ignore",
  resource_deps=[
    "cert-manager-webhook:deployment",
  ],
  labels=[
    "otel-operator"
  ]
)
k8s_resource(
  workload="gateway",
  resource_deps=[
    "cert-manager",
    "cert-manager-cainjector",
    "cert-manager-webhook:deployment",
    "opentelemetry-operator-controller-manager",
    "opentelemetry-operator-mutating-webhook-configuration",
    "opentelemetry-operator-validating-webhook-configuration"
  ],
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="grafana",
  port_forwards=3000,
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="loki",
  port_forwards=3100,
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="prometheus",
  port_forwards=9090,
  labels=[
    "default-apps"
  ]
)
k8s_resource(
  workload="tempo", 
  port_forwards=4317,
  labels=[
    "default-apps"
  ]
)