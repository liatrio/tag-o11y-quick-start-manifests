apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_PATHS_CONFIG
              value: /etc/grafana/provisioning/grafana.ini
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - name: pv
              mountPath: /var/lib/grafana
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-ini
              mountPath: /etc/grafana/provisioning
            - name: providers
              mountPath: /etc/grafana/provisioning/dashboards

            # Demo Dashboards
            - name: dashboard-demo
              mountPath: /etc/grafana/provisioning/dashboards/demo/demo.json
            - name: dashboard-opentelemetry-collector-data-flow
              mountPath: /etc/grafana/provisioning/dashboards/demo/opentelemetry-collector-data-flow.json
            - name: dashboard-opentelemetry-collector
              mountPath: /etc/grafana/provisioning/dashboards/demo/opentelemetry-collector.json
            - name: dashboard-spanmetrics
              mountPath: /etc/grafana/provisioning/dashboards/demo/spanmetrics.json

            # GitProviderReceiver dashboards
            - name: dashboard-gpr-delivery-metrics
              mountPath: /etc/grafana/provisioning/dashboards/gpr/delivery-metrics.json
            - name: dashboard-gpr-dora-metrics
              mountPath: /etc/grafana/provisioning/dashboards/gpr/dora-metrics.json
            - name: dashboard-gpr-engineering-effectiveness-metrics
              mountPath: /etc/grafana/provisioning/dashboards/gpr/engineering-effectiveness-metrics.json

      volumes:
        - name: pv
          persistentVolumeClaim:
            claimName: pvc
        - name: grafana-ini
          configMap:
            name: grafana-ini
        - name: datasources
          configMap:
            name: datasources
        - name: providers
          configMap:
            name: providers

        # Demo Dashboards
        - name: dashboard-demo
          configMap:
            name: dashboard-demo
        - name: dashboard-opentelemetry-collector-data-flow
          configMap:
            name: dashboard-opentelemetry-collector-data-flow
        - name: dashboard-opentelemetry-collector
          configMap:
            name: dashboard-opentelemetry-collector
        - name: dashboard-spanmetrics
          configMap:
            name: dashboard-spanmetrics

        # GitProviderReceiver dashboards
        - name: dashboard-gpr-delivery-metrics
          configMap:
            name: dashboard-gpr-delivery-metrics
        - name: dashboard-gpr-dora-metrics
          configMap:
            name: dashboard-gpr-dora-metrics
        - name: dashboard-gpr-engineering-effectiveness-metrics
          configMap:
            name: dashboard-gpr-engineering-effectiveness-metrics
