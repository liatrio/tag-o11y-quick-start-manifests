---
- op: add
  path: /spec/config
  value:
    extensions:

    receivers:
      ## Webhookevent receiver is used to connect to a GitHub App and receive json event logs
      ## The processors are used to extract/filter all the meaningful data from those logs
      webhookevent:
        endpoint: 0.0.0.0:9999
        path: /
        health_path: /healthcheck

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15

      batch:
        send_batch_size: 100
        timeout: 10s

      transform/body:
        log_statements:
          - context: log
            statements:
              - set(body, ParseJSON(body)) where body != nil
      resource:
        attributes:
          - key: service.name
            value: gitlab
            action: upsert

      ############################################
      # GitHub Push Events
      ############################################
      transform/push:
        log_statements:
          - context: log
            statements:
              - keep_keys(body, ["ref", "before", "after", "compare", "repository", "pusher", "head_commit" ])
              - keep_keys(body["repository"], ["name", "full_name", "owner", "custom_properties", "html_url", "pushed_at"]) where body["repository"] !=
                nil
              - keep_keys(body["repository"]["owner"], ["login"]) where body["repository"]["owner"] != nil
              # The below attributes are from Semantic Conventions v1.27.0
              - set(attributes["event.name"], "ref_pushed")
              - set(attributes["vcs.ref.head.name"], body["ref"]) where body["ref"] != nil
              - set(attributes["vcs.ref.head.type"], "branch")
              - set(attributes["vcs.ref.head.revision"], body["after"]) where body["after"] != nil
              - set(attributes["vcs.repository.url.full"], body["repository"]["html_url"]) where body["repository"]["html_url"] != nil
              - set(resource.attributes["service.namespace"], "github")
              - set(resource.attributes["service.name"], body["repository"]["name"]) where body["repository"]["name"] != nil
              # End of Semantic Conventions v1.27.0
              - set(attributes["vcs.ref.head.message"], body["head_commit"]["message"]) where IsMap(body["head_commit"]) and body["head_commit"]["message"]
                != nil
              - set(attributes["vcs.ref.head.revision.author"], body["head_commit"]["committer"]["name"]) where IsMap(body["head_commit"]) and body["head_commit"]["committer"]["name"]
                != nil
              - set(attributes["vcs.repository.owner"], body["repository"]["owner"]["login"]) where body["repository"]["owner"]["login"] != nil
              - set(attributes["vcs.repository.name"], body["repository"]["name"]) where body["repository"]["name"] != nil
              - set(attributes["team.name"], body["repository"]["custom_properties"]["team_name"]) where body["repository"]["custom_properties"]["team_name"]
                != nil
      filter/push:
        error_mode: ignore
        logs:
          log_record:
            - not IsMatch(body["pusher"], ".*")

      ############################################
      # GitHub Issue Events
      ############################################
      transform/issue:
        log_statements:
          - context: log
            statements:
              - keep_keys(body, ["issue", "action", "resources", "instrumentation_scope", "repository"])
              - keep_keys(body["repository"], ["name", "full_name", "owner", "topics", "custom_properties", "html_url"]) where body["repository"] != nil
              - keep_keys(body["repository"]["owner"], ["login"]) where body["repository"]["owner"] != nil
              - keep_keys(body["issue"], ["created_at", "closed_at", "labels", "number", "repository_url", "state"]) where body["issue"] != nil
              - set(attributes["created_at"], body["issue"]["created_at"]) where body["issue"]["created_at"] != nil
              - set(attributes["closed_at"], body["issue"]["closed_at"]) where body["issue"]["closed_at"] != nil
              # The below attributes are from Semantic Conventions v1.27.0
              - set(attributes["event.name"], Concat(["issue", body["action"]], "_")) where body["action"] != nil
              - set(attributes["vcs.repository.url.full"], body["repository"]["html_url"]) where body["repository"]["html_url"] != nil
              - set(attributes["vcs.repository.owner"], body["repository"]["owner"]["login"]) where body["repository"]["owner"]["login"] != nil
              - set(attributes["vcs.repository.name"], body["repository"]["name"]) where body["repository"]["name"] != nil
              - set(attributes["vcs.issue.id"], body["issue"]["number"]) where body["issue"]["number"] != nil
              - set(attributes["team.name"], body["repository"]["custom_properties"]["team_name"]) where body["repository"]["custom_properties"]["team_name"]
                != nil
              - set(resource.attributes["service.namespace"], "github")
              - set(resource.attributes["service.name"], body["repository"]["name"]) where body["repository"]["name"] != nil

      filter/issues:
        error_mode: ignore
        logs:
          log_record:
            - not IsMatch(body["issue"], ".*")

      ############################################
      # GitHub Action Deployment Events
      ############################################
      transform/deployments:
        log_statements:
          - context: log
            statements:
              - keep_keys(body, ["deployment", "deployment_status", "workflow", "worflow_run", "topics", "repository", "action"])
              - keep_keys(body["deployment"], ["url", "id", "task", "environment", "created_at", "updated_at", "sha", "ref"]) where body["deployment"] !=
                nil
              - keep_keys(body["deployment_status"], ["state", "url", "environment"]) where body["deployment_status"] != nil
              - keep_keys(body["workflow"], ["name", "path", "url"]) where body["workflow"] != nil
              - keep_keys(body["workflow_run"], ["head_branch", "head_sha", "display_title", "run_number", "status", "workflow_id"]) where body["workflow_run"]
                != nil
              - keep_keys(body["repository"], ["name", "full_name", "owner", "custom_properties", "html_url"]) where body["repository"] != nil
              - keep_keys(body["repository"]["owner"], ["login"]) where body["repository"]["owner"] != nil
              # The below attributes are from Semantic Conventions v1.27.0
              - set(attributes["event.name"], Concat(["deployment", body["action"]], "_")) where body["action"] != nil
              - set(attributes["vcs.repository.owner"], body["repository"]["owner"]["login"]) where body["repository"]["owner"]["login"] != nil
              - set(attributes["vcs.repository.url.full"], body["repository"]["html_url"]) where body["repository"]["html_url"] != nil
              - set(attributes["deployment.status"], body["deployment_status"]["state"]) where body["deployment_status"]["state"] != nil
              - set(attributes["deployment.environment.name"], body["deployment"]["environment"]) where body["deployment"]["environment"] != nil
              - set(attributes["deployment.id"], body["deployment"]["id"]) where body["deployment"]["id"] != nil
              - set(attributes["vcs.ref.head.revision"], body["deployment"]["sha"]) where body["deployment"]["sha"] != nil
              - set(attributes["vcs.repository.name"], body["repository"]["name"]) where body["repository"]["name"] != nil
              - set(resource.attributes["team.name"], body["repository"]["custom_properties"]["team_name"]) where body["repository"]["custom_properties"]["team_name"]
                != nil
              - set(resource.attributes["service.namespace"], "github")
              - set(resource.attributes["service.name"], body["repository"]["name"]) where body["repository"]["name"] != nil

      filter/deployments:
        error_mode: ignore
        logs:
          log_record:
            - not IsMatch(body["deployment"], ".*")

      ############################################
      # GitHub Pull Request Events
      ############################################

      transform/pull_requests:
        log_statements:
          - context: log
            statements:
              - keep_keys(body, ["action", "pull_request", "number", "resources", "instrumentation_scope", "repository", "base"])
              - keep_keys(body["base"], ["ref"]) where body["base"] != nil
              - keep_keys(body["pull_request"], ["title", "user", "created_at", "merged_at", "merged", "merge_commit_sha", "url", "labels"]) where body["pull_request"]
                != nil
              - keep_keys(body["pull_request"]["user"], ["login"]) where body["pull_request"]["user"] != nil
              - keep_keys(body["repository"], ["name", "full_name", "topics", "custom_properties", "html_url"]) where body["repository"] != nil
              - set(attributes["created_at"], body["pull_request"]["created_at"]) where body["pull_request"]["created_at"] != nil
              - set(attributes["merged_at"], body["pull_request"]["merged_at"]) where body["pull_request"]["merged_at"] != nil
              - set(attributes["merge_sha"], body["pull_request"]["merge_commit_sha"]) where body["pull_request"]["merge_commit_sha"] != nil
              # The below attributes are from Semantic Conventions v1.27.0
              - set(attributes["event.name"], Concat(["change", body["action"]], "_")) where body["action"] != nil
              - set(attributes["vcs.repository.name"], body["repository"]["name"]) where body["repository"]["name"] != nil
              - set(attributes["vcs.repository.url.full"], body["repository"]["html_url"]) where body["repository"]["html_url"] != nil
              - set(attributes["vcs.change.title"], body["pull_request"]["title"]) where body["pull_request"]["title"] != nil
              - set(attributes["vcs.change.id"], body["pull_request"]["id"]) where body["pull_request"]["id"] != nil
              - set(attributes["vcs.ref.head.revision"], body["pull_request"]["merge_commit_sha"]) where body["pull_request"]["merge_commit_sha"]
                != nil
              - set(attributes["vcs.ref.head.message"], body["pull_request"]["title"]) where body["pull_request"]["title"] != nil
              - set(attributes["vcs.ref.head.name"], body["base"]["ref"]) where body["base"]["ref"] != nil
              - set(attributes["vcs.ref.head.type"], "branch")
              # End of Semantic Conventions v1.27.0
              - set(resource.attributes["team.name"], body["repository"]["custom_properties"]["team_name"]) where body["repository"]["custom_properties"]["team_name"]
                != nil
              - set(resource.attributes["service.namespace"], "github")
              - set(resource.attributes["service.name"], body["repository"]["name"]) where body["repository"]["name"] != nil

      filter/pull_requests:
        error_mode: ignore
        logs:
          log_record:
            - not IsMatch(body["pull_request"], ".*")

    exporters:
      debug:
        verbosity: basic
        sampling_initial: 2
        sampling_thereafter: 500

      debug/detailed:
        verbosity: detailed
        sampling_initial: 2
        sampling_thereafter: 500

      otlp:
        endpoint: http://gateway-collector.collector.svc.cluster.local:4317
        tls:
          insecure: true

    service:
      extensions: []

      pipelines:
        logs:
          receivers:
            - webhookevent
          processors:
            - resource
            # - transform/body
            # - filter/push
            # - transform/push
          exporters:
            - debug
            - otlp

        # logs/push:
        #   receivers:
        #     - webhookevent
        #   processors:
        #     - transform/body
        #     - filter/push
        #     - transform/push
        #   exporters:
        #     - debug
        #     - otlp
        #
        # logs/issues:
        #   receivers:
        #     - webhookevent
        #   processors:
        #     - transform/body
        #     - filter/issues
        #     - transform/issue
        #   exporters:
        #     - debug
        #     - otlp
        #
        logs/deployments:
          receivers:
            - webhookevent
          processors:
            - transform/body
            - filter/deployments
            # - filter/tag-o11y
            - transform/deployments
            # - transform/tag-o11y-attributes
          exporters:
            - debug
            - otlp
        #
        # ############################################
        # # GitHub Pull Request Events
        # ############################################
        #
        # logs/pull-requests:
        #   receivers:
        #     - webhookevent
        #   processors:
        #     - transform/body
        #     - filter/pull_requests
        #     # - filter/tag-o11y
        #     - transform/pull_requests
        #     # - transform/tag-o11y-attributes
        #   exporters:
        #     - debug
        #     - otlp
